// generated by Fast Light User Interface Designer (fluid) version 1.0100

#include "WriteIni.h"
// Quat - A 3D fractal generation program
// Copyright (C) 1997-2000 Dirk Meyer
// (email: dirk.meyer@studserv.uni-stuttgart.de)
// mail:  Dirk Meyer
//        Marbacher Weg 29
//        D-71334 Waiblingen
//        Germany
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
static bool WriteINI_state = false;

Fl_Window* win = (Fl_Window*)0;

Fl_Check_Button* OBJ = (Fl_Check_Button*)0;

Fl_Check_Button* VIEW = (Fl_Check_Button*)0;

Fl_Check_Button* COL = (Fl_Check_Button*)0;

Fl_Check_Button* OTHER = (Fl_Check_Button*)0;

Fl_Return_Button* ok_button = (Fl_Return_Button*)0;

static void cb_ok_button(Fl_Return_Button*, void*) {
    WriteINI_state = true;
    win->hide();
}

Fl_Button* cancel_button = (Fl_Button*)0;

static void cb_cancel_button(Fl_Button*, void*) {
    WriteINI_state = false;
    win->hide();
}

bool WriteINI(int& mode) {
    Fl_Window* w;
    {
        Fl_Window* o = win = new Fl_Window(210, 187, "Write Parameters to INI file");
        w = o;
        {
            Fl_Check_Button* o = OBJ = new Fl_Check_Button(55, 40, 95, 25, "Object Data");
            o->down_box(FL_DOWN_BOX);
            o->value(1);
            o->selection_color(2);
            o->labelsize(12);
        }
        {
            Fl_Check_Button* o = VIEW = new Fl_Check_Button(55, 60, 90, 25, "View Data");
            o->down_box(FL_DOWN_BOX);
            o->value(1);
            o->selection_color(2);
            o->labelsize(12);
        }
        {
            Fl_Check_Button* o = COL = new Fl_Check_Button(55, 80, 90, 25, "Color Data");
            o->down_box(FL_DOWN_BOX);
            o->value(1);
            o->selection_color(2);
            o->labelsize(12);
        }
        {
            Fl_Check_Button* o = OTHER = new Fl_Check_Button(55, 100, 90, 25, "Other Data");
            o->down_box(FL_DOWN_BOX);
            o->value(1);
            o->selection_color(2);
            o->labelsize(12);
        }
        {
            Fl_Box* o = new Fl_Box(30, 15, 140, 15, "Which data to write:");
            o->labelsize(12);
            o->align(FL_ALIGN_TOP_LEFT | FL_ALIGN_INSIDE);
        }
        {
            Fl_Return_Button* o = ok_button = new Fl_Return_Button(15, 150, 80, 25, "OK");
            o->shortcut(0xff0d);
            o->labelsize(12);
            o->callback((Fl_Callback*)cb_ok_button);
        }
        {
            Fl_Button* o = cancel_button = new Fl_Button(115, 150, 80, 25, "Cancel");
            o->shortcut(0xff1b);
            o->callback((Fl_Callback*)cb_cancel_button);
        }
        o->set_modal();
        o->end();
    }
    win->show();
    while (win->shown()) {
        Fl::wait();
    }
    mode = 0;
    if (OBJ->value()) mode |= PS_OBJ;
    if (VIEW->value()) mode |= PS_VIEW;
    if (COL->value()) mode |= PS_COL;
    if (OTHER->value()) mode |= PS_OTHER;

    delete win;

    return WriteINI_state;
}
