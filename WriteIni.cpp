// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "WriteIni.h"
// Quat - A 3D fractal generation program
// Copyright (C) 1997-2000 Dirk Meyer
// (email: dirk.meyer@studserv.uni-stuttgart.de)
// mail:  Dirk Meyer
//        Marbacher Weg 29
//        D-71334 Waiblingen
//        Germany
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
static bool WriteINI_state = false; 

Fl_Double_Window *win=(Fl_Double_Window *)0;

Fl_Check_Button *OBJ=(Fl_Check_Button *)0;

Fl_Check_Button *VIEW=(Fl_Check_Button *)0;

Fl_Check_Button *COL=(Fl_Check_Button *)0;

Fl_Check_Button *OTHER=(Fl_Check_Button *)0;

Fl_Return_Button *ok_button=(Fl_Return_Button *)0;

static void cb_ok_button(Fl_Return_Button*, void*) {
  WriteINI_state = true; win->hide();
}

Fl_Button *cancel_button=(Fl_Button *)0;

static void cb_cancel_button(Fl_Button*, void*) {
  WriteINI_state = false; win->hide();
}

bool WriteINI(int& mode) {
  { win = new Fl_Double_Window(210, 185, "Write Parameters to INI file");
    { OBJ = new Fl_Check_Button(55, 40, 95, 25, "Object Data");
      OBJ->down_box(FL_DOWN_BOX);
      OBJ->value(1);
      OBJ->selection_color((Fl_Color)2);
      OBJ->labelsize(12);
    } // Fl_Check_Button* OBJ
    { VIEW = new Fl_Check_Button(55, 60, 90, 25, "View Data");
      VIEW->down_box(FL_DOWN_BOX);
      VIEW->value(1);
      VIEW->selection_color((Fl_Color)2);
      VIEW->labelsize(12);
    } // Fl_Check_Button* VIEW
    { COL = new Fl_Check_Button(55, 80, 90, 25, "Color Data");
      COL->down_box(FL_DOWN_BOX);
      COL->value(1);
      COL->selection_color((Fl_Color)2);
      COL->labelsize(12);
    } // Fl_Check_Button* COL
    { OTHER = new Fl_Check_Button(55, 100, 90, 25, "Other Data");
      OTHER->down_box(FL_DOWN_BOX);
      OTHER->value(1);
      OTHER->selection_color((Fl_Color)2);
      OTHER->labelsize(12);
    } // Fl_Check_Button* OTHER
    { Fl_Box* o = new Fl_Box(30, 15, 140, 15, "Which data to write:");
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
    } // Fl_Box* o
    { ok_button = new Fl_Return_Button(15, 150, 80, 25, "OK");
      ok_button->shortcut(0xff0d);
      ok_button->labelsize(12);
      ok_button->callback((Fl_Callback*)cb_ok_button);
    } // Fl_Return_Button* ok_button
    { cancel_button = new Fl_Button(115, 150, 80, 25, "Cancel");
      cancel_button->shortcut(0xff1b);
      cancel_button->callback((Fl_Callback*)cb_cancel_button);
    } // Fl_Button* cancel_button
    win->set_modal();
    win->end();
  } // Fl_Double_Window* win
  win->show();
  while (win->shown())
  {
  	Fl::wait();
  }
  mode = 0;
  if (OBJ->value()) mode |= PS_OBJ;
  if (VIEW->value()) mode |= PS_VIEW;
  if (COL->value()) mode |= PS_COL;
  if (OTHER->value()) mode |= PS_OTHER;
  
  delete win;
  
  return WriteINI_state;
}
